name: Del workflow runs->Get pkgs->Build and release
on:
  workflow_dispatch:
  schedule:
    - cron: '0 6,17 * * *'
jobs:
  del_runs:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 10
          keep_minimum_runs: 6
  checkout:
    needs: del_runs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check for pkgs
        id: pkg-matrix
        run: |
          json=$(cat pkg_info.json)
          packages=$(echo "$json" | jq '.packages')
          pkgs=""

          for package in $(echo "$packages" | jq -c '.[]'); do
            # Use jq to extract the repo,pkg,sha fields
            pkg=$(echo "$package" | jq -r '.pkg')

              if [ "$pkgs" = "" ]; then
                pkgs=\"$pkg\"
              else
                pkgs=$pkgs,\"$pkg\"
              fi
          done

          # define the updatable_pkgs output
          pkgs=$((
            echo '{ "pkgs" : ['
            echo $pkgs
            echo " ]}"
          ) | jq -c .)

          echo "pkgs=$pkgs" >> $GITHUB_OUTPUT
    outputs:
      pkgs: ${{ steps.pkg-matrix.outputs.pkgs }}
  update:
    needs: checkout
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix: ${{ fromJSON(needs.monitor.outputs.pkgs) }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Delete release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: packages
          fail-if-no-assets: false
          assets: ${{ matrix.pkgs }}-*.pkg.tar.zst
      - uses: ./build-aur-action
        with:
          pkg-name: ${{ matrix.pkgs }}
      - uses: actions/upload-artifact@v3
        with:
          path: ./*/*.pkg.tar.zst
          name: ${{ matrix.pkgs }}
          if-no-files-found: error
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: packages
          omitNameDuringUpdate: true
          artifacts: ./*/*.zst
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Send notify to telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: "From ${{ github.repository }} - ${{ github.workflow }}: \n    Package
            ${{ matrix.pkgs }} build success!\n[View it On Github](${{ github.server_url
            }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n"
